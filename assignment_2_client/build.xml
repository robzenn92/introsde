<?xml version="1.0" encoding="UTF-8"?>
<!-- ================================= 
    Introduction to Service Design and Engineering Laboratory
    Description: ANT build script for the session on JAXB and Dozer 
    Author: cdparra
    
    Notes: 
    
    * This build file includes targets to download and install in your local project the Apache IVY jar
    * IVY is used to manage dependencies on projects (e.g., jaxb libraries, jackson libraries for json, etc.) 
    * 
       TO USE IVY IN YOUR PROJECTS IN ORDER TO GET MANAGE DEPENDENCIES, MAKE SURE THE FOLLOWING LINES ARE
       IN YOUR BUILD.XML UNTILL 'IVY-END-LINE'
       
       # The target "download-ivy" and "install-ivy" will download the ivy jar and place it in the "ivy" folder
       # 
-->
<project name="assignment2_client" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- PART 1: Ivy properties, download, installation and configuration -->
  <property name="ivy.install.version" value="2.4.0-rc1" />
  <property name="ivy.jar.dir" value="${basedir}/ivy" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

  <target name="download-ivy" unless="skip.download">
    <mkdir dir="${ivy.jar.dir}"/>
    <echo message="Installing ivy..."/>
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="install-ivy" depends="download-ivy" description="--> install ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>

  <!-- PART 2: General properties definitions -->
  <property name="build.dir" value="build" />
  <property name="src.dir" value="src" />
  <property name="lib.dir" value="WebContent/WEB-INF/lib" />
  <property name="web.dir" value="." />

  <target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy">
    <ivy:retrieve pattern="${lib.dir}/[type]s-[artifact]-[revision].[ext]"/>
  </target>

  <path id="lib.path.id">
    <fileset dir="${lib.dir}" />
  </path>

  <path id="run.path.id">
    <path refid="lib.path.id" />
    <fileset dir="${build.dir}">
      <include name="*.class" />
      <include name="**/*.class" />
      <exclude name="**/*Test*" />
    </fileset>
  </path>

  <!-- PART 3: compilation and execution targets for this session -->
  <target name="init" depends="install-ivy, resolve">
    <echo message="Init has been called" />
    <mkdir dir="${build.dir}" />
    <echo message="${build.dir} has been created" />
  </target>

  <target name="clean">
    <echo message="Clean has been called" />
    <delete dir="${build.dir}" />
    <echo message="${build.dir} has been deleted" />
    <delete dir="${src.dir}/${xjc.package}" />
    <echo message="${src.dir}/${xjc.package} has been deleted" />
  </target>

  <target name="compile" depends="init">
    <echo message="Compile target has been called" />
    <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" includeAntRuntime="false">
    </javac>
    <copy todir="${build.dir}" overwrite="true">
      <fileset dir="${src.dir}">
        <include name="*.xml" />
      </fileset>
    </copy>
  </target>

  <target name="execute-xml-client">
    <echo message="Executing Assignment 2 - XML Client" />
    <java classname="secondassignmentclient.XmlClient" classpath="build" fork="true">
      <arg value="${url}"/>
      <classpath>
        <fileset dir="${lib.dir}">
          <include name="**/*.jar" />
          <include name="*.jar" />
        </fileset>
      </classpath>
    </java>
  </target>

  <target name="execute-json-client">
    <echo message="Executing Assignment 2 - JSON Client" />
    <java classname="secondassignmentclient.JsonClient" classpath="build" fork="true">
      <arg value="${url}"/>
      <classpath>
        <fileset dir="${lib.dir}">
          <include name="**/*.jar" />
          <include name="*.jar" />
        </fileset>
      </classpath>
    </java>
  </target>

  <!-- make sure you have created first the WebContent folder, including a META-INF folder, WEB-INF/web.xml file and WEB-INF/lib folder --> 
  <target name="create.war" depends="compile">
    <war destfile="sdelab06.war" webxml="${web.dir}/WebContent/WEB-INF/web.xml">
      <fileset dir="${web.dir}/WebContent">
        <include name="**/*.*"/>
      </fileset>
      <classes dir="${build.dir}"/>
    </war>
  </target>
</project>
